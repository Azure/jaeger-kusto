name: master

on:
  push:
    branches: [master]
    tags:
      - v*
  pull_request:
    branches: [master]

jobs:
  golangci-lint:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v1
        with:
          version: v1.26
  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: Build & Test
    runs-on: ubuntu-latest
    needs: golangci-lint
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Build
        run: go build -v .

#       - name: Calc coverage and test
#         run: |
#           export PATH=$PATH:$(go env GOPATH)/bin   
#           go test ./... -v -covermode=count -coverprofile=coverage.out

#       - name: Convert coverage to lcov
#         uses: jandelgado/gcov2lcov-action@v1.0.2
#         with:
#           infile: coverage.out
#           outfile: coverage.lcov

#       - name: Coveralls
#         uses: coverallsapp/github-action@master
#         with:
#           github-token: ${{ secrets.github_token }}
#           path-to-lcov: coverage.lcov

      - name: Upload binary
        uses: actions/upload-artifact@v1
        with:
          name: jaeger-kusto
          path: jaeger-kusto

  docker-push:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: Docker Push
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Download binary
        uses: actions/download-artifact@v1
        with:
          name: jaeger-kusto

      - name: Build collector
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: dodopizza/jaeger-kusto/collector
          dockerfile: Dockerfile.collector
          tag_with_ref: true
          push: ${{ startsWith(github.ref, 'refs/tags/') }}

      - name: Build query
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: dodopizza/jaeger-kusto/query
          dockerfile: Dockerfile.query
          tag_with_ref: true
          push: ${{ startsWith(github.ref, 'refs/tags/') }}
          
      - name: Build agent
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: dodopizza/jaeger-kusto/agent
          dockerfile: Dockerfile.agent
          tag_with_ref: true
          push: ${{ startsWith(github.ref, 'refs/tags/') }}
            
      - name: Build all in one
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: dodopizza/jaeger-kusto/all-in-one
          dockerfile: Dockerfile
          tag_with_ref: true
          push: ${{ startsWith(github.ref, 'refs/tags/') }}
